#version 120
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif
#extension GL_EXT_gpu_shader4 : require

const vec4 _22[5] = vec4[](vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 0.20000000298023223876953125, 1.0), vec4(1.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.5, 1.0, 1.0));

uniform vec2 aspect;
uniform float ant_lim;
uniform float angle_start;
uniform float angle_end;
uniform sampler2D tex;
uniform float range;

varying vec2 tex_coord;

void main()
{
    vec2 beam = (tex_coord - vec2(0.5, 0.0)) * aspect;
    float beam_dist = length(beam);
    float beam_angle = acos(dot(normalize(beam), vec2(0.0, 1.0)));
    if ((beam_angle > ant_lim) || (beam_dist > 0.62000000476837158203125))
    {
        discard;
    }
    beam_angle *= sign(beam.x);
    if ((beam_angle < angle_start) || (beam_angle > angle_end))
    {
        discard;
    }
    gl_FragData[0] = _22[clamp(int((beam_dist * 5.0) / 0.62000000476837158203125), 0, 4)];
}

